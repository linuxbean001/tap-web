import {
  CourseRecord,
  CourseTopic,
  CourseTopicActivity,
  CourseTopicActivityRecord,
  CourseTopicRecord,
} from 'knex/types/tables'
import Asset from './asset'
import Instructor from './instructor'
import User from './user'

export type Course = {
  id: string
  lengthMin: number
  level: Course.Level
  title: string
  description: string
  categoryId: string
  category?: Course.Category
  published: boolean
  objectives: string[]
  thumbnailId: string
  thumbnail?: Partial<Asset>
  previewImages?: Partial<Asset>[]
  instructors?: Instructor[]
  topics?: Course.Topic[]
  createdAt?: string
  updatedAt?: string
}

export default Course

export namespace Course {
  export type Level = 'Foundational' | 'Beginner' | 'Intermediate' | 'Advanced'

  export interface Record {
    id: string
    userId: string
    user?: User | Partial<User>
    courseId: string
    course?: Course
    courseTopicRecords?: TopicRecord[]
    organizationId?: string
    createdAt?: string
    updatedAt?: string
  }

  export interface Topic {
    id: string
    title: string
    description: string
    order: number
    courseId: string
    course?: Pick<Course, 'id'> & Partial<Omit<Course, 'id'>>
    activities?: TopicActivity[]
    createdAt?: string
    updatedAt?: string
  }

  export interface TopicRecord {
    id: string
    courseRecordId: string
    courseRecord?: Record
    courseTopicId: string
    courseTopic?: Topic
    activityRecords?: TopicActivityRecord[]
    createdAt?: string
    updatedAt?: string
  }

  // This is a sub-topic
  export interface TopicActivity {
    id: string
    auId: string // unique id generated by course creator
    path: string // CDN path
    title: string
    description: string
    order: number
    courseTopicId: string
    type: string
    isVrOnly?: boolean
    courseTopic?: Topic
    createdAt?: string
    updatedAt?: string
  }

  export interface TopicActivityRecord {
    id: string
    completedAt: string | null
    courseTopicActivityId: string
    courseTopicActivity?: TopicActivity
    courseTopicRecordId: string
    courseTopicRecord?: TopicRecord
    launchUrl: string
    createdAt?: string
    updatedAt?: string
  }

  export interface Category {
    id: string
    label: string
  }

  export interface Quiz {
    id: string
    courseId: string
    courseTopicId: string
    courseTopicActivityId: string
    assessmentType: string
    createdAt?: string
    updatedAt?: string
  }

  export interface QuizRecord {
    id: string
    quizId: string
    quiz?: Quiz
    userId: string
    user?: User | Partial<User>
    courseRecordId: string
    courseRecord?: Record | Partial<Record>
    courseTopicRecordId: string
    courseTopicRecord?: TopicRecord | Partial<TopicRecord>
    courseTopicActivityRecordId: string
    courseTopicActivityRecord?:
      | TopicActivityRecord
      | Partial<TopicActivityRecord>
    score: number
    timeSpent: string
    createdAt?: string
    updatedAt?: string
  }

  export interface Question {
    id: string
    quizId: string
    topicId: string
    type: string
  }

  export interface Answer {
    id: string
    questionId: string
    wasCorrect: boolean
    pointValue: number
    timeSpent: string
    userId: string
  }

  export interface KnowledgeCheck {
    id: string
    courseId: string
    course?: Course | Partial<Course>
    courseTopicId: string
    courseTopic?: Topic | Partial<Topic>
    courseTopicActivityId: string
    courseTopicActivity?: TopicActivity | Partial<TopicActivity>
  }

  export interface KnowledgeCheckRecord {
    id: string
    kcId: string
    kc?: KnowledgeCheck | Partial<KnowledgeCheck>
    courseRecordId: string
    courseRecord?: Record | Partial<Record>
    courseTopicRecordId: string
    courseTopicRecord?: TopicRecord | Partial<TopicRecord>
    courseTopicActivityRecordId: string
    courseTopicActivityRecord?:
      | TopicActivityRecord
      | Partial<TopicActivityRecord>
    userId: string
    score: number
    timeSpent: string
    createdAt?: string
    updatedAt?: string
  }

  export interface KnowledgeCheckQuestion {
    id: string
    kcId: string
    type: string
    topicId: string
  }

  export interface KnowledgeCheckAnswer {
    id: string
    kcQuestionId: string
    wasCorrect: boolean
    pointValue: number
    timeSpent: string
    userId: string
  }

  export interface ActivityCheck {
    id: string
    courseId: string
    course?: Course | Partial<Course>
    courseTopicId: string
    courseTopic?: Topic | Partial<Topic>
    courseTopicActivityId: string
    courseTopicActivity?: TopicActivity | Partial<TopicActivity>
  }

  export interface ActivityCheckRecord {
    id: string
    acId: string
    ac?: ActivityCheck | Partial<ActivityCheck>
    courseRecordId: string
    courseRecord?: Record | Partial<Record>
    courseTopicRecordId: string
    courseTopicRecord?: TopicRecord | Partial<TopicRecord>
    courseTopicActivityRecordId: string
    courseTopicActivityRecord?:
      | TopicActivityRecord
      | Partial<TopicActivityRecord>
    userId: string
    score: number
    timeSpent: string
    createdAt?: string
    updatedAt?: string
  }

  export interface ActivityCheckQuestion {
    id: string
    acId: string
    type: string
    topicId: string
  }

  export interface ActivityCheckAnswer {
    id: string
    acQuestionId: string
    wasCorrect: boolean
    pointValue: number
    timeSpent: string
    userId: string
  }

  export interface SimulationAssessment {
    id: string
    courseId: string
    course?: Course
    courseTopicId: string
    courseTopic?: CourseTopic
    courseTopicActivityId: string
    courseTopicActivity?: CourseTopicActivity
  }

  export interface SimulationAssessmentRecord {
    id: string
    simulationAssessmentId: string
    courseRecordId: string
    courseRecord?: CourseRecord
    courseTopicRecordId: string
    courseTopicRecord?: CourseTopicRecord
    courseTopicActivityRecordId: string
    courseTopicActivityRecord: CourseTopicActivityRecord
    timeSpent: string
    score: number
  }

  export interface SimulationTraining {
    id: string
    courseId: string
    course?: Course
    courseTopicId: string
    courseTopic?: CourseTopic
    courseTopicActivityId: string
    courseTopicActivity?: CourseTopicActivity
  }

  export interface SimulationTrainingRecord {
    id: string
    simulationTrainingId: string
    courseRecordId: string
    courseRecord?: CourseRecord
    courseTopicRecordId: string
    courseTopicRecord?: CourseTopicRecord
    courseTopicActivityRecordId: string
    courseTopicActivityRecord: CourseTopicActivityRecord
    currentStep?: string
    timeSpent: string
    userId: string
  }

  export interface OrganizationCourses {
    id: string
    organizationName: string
    thirdPartyId: string
    courseId: string
  }
}
