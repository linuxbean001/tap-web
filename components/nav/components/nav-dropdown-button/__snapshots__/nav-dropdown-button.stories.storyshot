// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tab-web-platform shared/Nav/NavDropdownButton Index 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="flex w-full items-end justify-end"
      >
        <div
          class="hidden sm:ml-6 sm:flex sm:items-center"
        >
          <div
            class="relative ml-3"
            data-headlessui-state="open"
          >
            <div>
              <button
                aria-controls="headlessui-menu-items-mock-id"
                aria-expanded="true"
                aria-haspopup="menu"
                class="flex max-w-xs items-center rounded-full text-sm text-dark-primary"
                data-headlessui-state="open"
                id="headlessui-menu-button-mock-id"
                type="button"
              >
                <span
                  class=""
                >
                  John Doe
                </span>
              </button>
            </div>
            <div
              data-mocked-component="Transition"
            >
              <div
                aria-labelledby="headlessui-menu-button-mock-id"
                class="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-gray-0 py-1 shadow-lg"
                data-headlessui-state="open"
                id="headlessui-menu-items-mock-id"
                role="menu"
                tabindex="0"
              >
                <button
                  class="block w-full text-start px-4 py-2 text-sm text-gray-7"
                  data-headlessui-state=""
                  id="headlessui-menu-item-mock-id"
                  role="menuitem"
                  tabindex="-1"
                >
                  Update User Profile
                </button>
                <button
                  class="block w-full text-start px-4 py-2 text-sm text-gray-7"
                  data-headlessui-state=""
                  id="headlessui-menu-item-mock-id"
                  role="menuitem"
                  tabindex="-1"
                >
                  Log Out
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="flex w-full items-end justify-end"
    >
      <div
        class="hidden sm:ml-6 sm:flex sm:items-center"
      >
        <div
          class="relative ml-3"
          data-headlessui-state="open"
        >
          <div>
            <button
              aria-controls="headlessui-menu-items-mock-id"
              aria-expanded="true"
              aria-haspopup="menu"
              class="flex max-w-xs items-center rounded-full text-sm text-dark-primary"
              data-headlessui-state="open"
              id="headlessui-menu-button-mock-id"
              type="button"
            >
              <span
                class=""
              >
                John Doe
              </span>
            </button>
          </div>
          <div
            data-mocked-component="Transition"
          >
            <div
              aria-labelledby="headlessui-menu-button-mock-id"
              class="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-gray-0 py-1 shadow-lg"
              data-headlessui-state="open"
              id="headlessui-menu-items-mock-id"
              role="menu"
              tabindex="0"
            >
              <button
                class="block w-full text-start px-4 py-2 text-sm text-gray-7"
                data-headlessui-state=""
                id="headlessui-menu-item-mock-id"
                role="menuitem"
                tabindex="-1"
              >
                Update User Profile
              </button>
              <button
                class="block w-full text-start px-4 py-2 text-sm text-gray-7"
                data-headlessui-state=""
                id="headlessui-menu-item-mock-id"
                role="menuitem"
                tabindex="-1"
              >
                Log Out
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
